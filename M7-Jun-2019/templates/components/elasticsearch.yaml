apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
spec:
  ports:
    - name: elasticsearch-service-port
      protocol: TCP
      port: 9300
      targetPort: 9300
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      name: elasticsearch
      labels:
        app: elasticsearch
        tier: persitent-tier
        container_name: elasticsearch
        environment: {{ .Values.label.ENVIRONMENT }}        
    spec:
      serviceAccountName: common-service-account
      volumes:
      - name: elasticsearch-data-volume
        persistentVolumeClaim:
          claimName: elasticsearch-persistent-volume-claim
      - name: elasticsearch-fluentd-config-volume
        configMap:
          name: elasticsearch-fluentd-configmap
      - name: elasticsearch-configuration-configmap-volume
        configMap:
          name: elasticsearch-configuration-configmap
      containers:
      - name: elasticsearch-container
        image: {{required "Image Info is mandatory! Read the Project Documentation to understand what and where to configure." .Values.image.ELASTICSEARCH }}
        imagePullPolicy: IfNotPresent
        {{- with ( pluck .Values.resourceUnit.size .Values.resourceUnit | first ) }}
        env:
        - name: ES_MAX_MEM
          value: {{ .memory.max.ELASTICSEARCH }}m
        - name: processors
          value: "1"
        resources:
          limits:
            memory: {{ .memory.max.ELASTICSEARCH }}Mi
            cpu: {{ .cpu.max.ELASTICSEARCH }}m
          requests:
            memory: {{ .memory.max.ELASTICSEARCH }}Mi
            cpu: {{ .cpu.max.ELASTICSEARCH }}m
        {{- end }}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearch-data-volume
          subPath: data
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: elasticsearch-configuration-configmap-volume
          subPath: logging.yml
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: elasticsearch-configuration-configmap-volume
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/logs
          name: elasticsearch-data-volume
          subPath: logs
        - mountPath: /tmp
          name: elasticsearch-data-volume
          subPath: tmp
        securityContext:
          readOnlyRootFilesystem: true
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - > 
                connection_status=`curl localhost:9200/_cat/health`; 
                if [[ ! $connection_status =~ "metricstream" ]] ; then  
                exit 1; 
                else 
                exit 0; 
                fi
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - >
                connection_status=`curl localhost:9200/_cat/health`; 
                if [[ ! $connection_status =~ "metricstream" ]] ; then  
                exit 1; 
                else 
                exit 0; 
                fi
          failureThreshold: 10
          initialDelaySeconds: 300
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - name: es-port
          containerPort: 9300
      - name: fluentd-container
        image: {{ .Values.image.LOGZIO }}
        env:
        - name:  LOGZIO_TOKEN
          valueFrom:
            secretKeyRef:
              name: logzio-token-secret
              key: logzio-token
        - name:  LOGZIO_URL
          valueFrom:
            secretKeyRef:
              name: logzio-token-secret
              key: logzio-url
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: POD_UNIQUE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: CONTAINER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['container_name']
        - name: ENVIRONMENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['environment']
        - name: APP_TIER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tier']
        resources:
          limits:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
          requests:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
        volumeMounts:
        - name: elasticsearch-fluentd-config-volume
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: elasticsearch-data-volume
          mountPath: /usr/share/elasticsearch/logs
          subPath: logs
      imagePullSecrets:
      - name: container-registry-key-secret
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      allowedCapabilities: null
