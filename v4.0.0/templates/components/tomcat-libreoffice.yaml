apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
spec:
  ports:
    - name: tomcat-service-port
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: tomcat
  {{- if or (eq "GKE" .Values.cloudService.provider) (eq "EKS" .Values.cloudService.provider) (eq "VM" .Values.cloudService.provider)}}
  type: NodePort
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-ssh-service
spec:
  ports:
    - name: tomcat-ssh-service-port
      protocol: TCP
      port: 22
      nodePort: 30111
  selector:
    app: tomcat
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-jmx-service
spec:
  ports:
    - name: tomcat-jmx-service-port
      protocol: TCP
      port: 8888
      targetPort: 8888
  selector:
    app: tomcat
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
spec:
  replicas: 0
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      name: tomcat
      labels:
        app: tomcat
        tier: frontend
        container_name: tomcat
        environment: {{ .Values.label.ENVIRONMENT }}
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: kubernetes.io/hostname
#                operator: In
#                values:
#                - ip-192-168-226-229
      serviceAccountName: common-service-account
      volumes:
      - name: tomcat-data-volume
        persistentVolumeClaim:
          claimName: tomcat-persistent-volume-claim
      - name: metricstream-license-keys-volume
        secret:
          secretName: metricstream-license-keys-secret
      - name: tomcat-fluentd-config-volume
        configMap:
          name: tomcat-fluentd-configmap
      - name: tomcat-configuration-volume
        configMap:
          name: tomcat-configuration-configmap
      - name: systemi-configuration-volume
        configMap:
          name: systemi-configuration-configmap
      containers:
      - name: tomcat-container
        image: {{required "Image Info is mandatory! Read the Project Documentation to understand what and where to configure." .Values.image.TOMCAT }}
        imagePullPolicy: Always
        env:
        - name: POD_NAME
          value: tomcat
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TOMCAT_JAVA_XMX
          valueFrom:
            configMapKeyRef:
              name: resource-unit-configmap
              key: TOMCAT_JAVA_XMX
        - name: CLASSPATH
          value: "/usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar"
        readinessProbe:
          httpGet:
            path: /ui
            port: tomcat-port
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: /ui
            port: tomcat-port
          failureThreshold: 10
          initialDelaySeconds: 300
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        ports:
        - name: tomcat-port
          containerPort: 8080
        - name: tomcat-jmx-port
          containerPort: 8888
        - name: lo-port
          containerPort: 8997
        - name: tomcat-ssh-port
          containerPort: 22
#        {{- with ( pluck .Values.resourceUnit.size .Values.resourceUnit | first ) }}
#        resources:
#          limits:
#            memory: {{ .memory.max.TOMCAT }}Mi
#            cpu: {{ .cpu.max.TOMCAT }}m
#          requests:
#            memory: {{ .memory.max.TOMCAT }}Mi
#            cpu: {{ .cpu.max.TOMCAT }}m
#        {{- end }}
        volumeMounts:
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/log
          name: tomcat-data-volume
          subPath: SYSTEMi/Systemi/log
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/keys
          name: metricstream-license-keys-volume
        - mountPath: /opt/metricstream/SYSTEMi/KMS/KMA/conf/kma.ini
          name: systemi-configuration-volume
          subPath: kma.ini
        - mountPath: /opt/metricstream/SYSTEMi/KMS/KMP/conf/kmp.ini
          name: systemi-configuration-volume
          subPath: kmp.ini
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/webapp/WEB-INF/conf/mongodb.properties
          name: systemi-configuration-volume
          subPath: mongodb.properties
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/webapp/WEB-INF/shiro.ini
          name: systemi-configuration-volume
          subPath: shiro.ini
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/webapp/WEB-INF/web.xml
          name: systemi-configuration-volume
          subPath: web.xml
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/Config/config.client.xml
          name: systemi-configuration-volume
          subPath: config.client.xml
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/Config/cif/cif_jndi.properties
          name: systemi-configuration-volume
          subPath: cif_jndi.properties
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/Resource/Html/ui/WEB-INF/rewrite.config
          name: systemi-configuration-volume
          subPath: rewrite.config
        - mountPath: /data/metricstream
          name: tomcat-data-volume
          subPath: ms_data
        - mountPath: /usr/local/tomcat/conf
          name: tomcat-configuration-volume
        - mountPath: /usr/local/tomcat/logs
          name: tomcat-data-volume
          subPath: logs
        - mountPath: /usr/local/tomcat/work
          name: tomcat-data-volume
          subPath: work
        - mountPath: /tmp
          name: tomcat-data-volume
          subPath: tomcat_tmp
        - mountPath: /var/tmp
          subPath: libre_var_tmp
          name: tomcat-data-volume
        - mountPath: /home/tomcat
          subPath: libre_home_tomcat
          name: tomcat-data-volume
        - mountPath: /opt/metricstream/SYSTEMi/Systemi/temp
          name: tomcat-data-volume
          subPath: libre_systemi_temp
        securityContext:
          readOnlyRootFilesystem: false
      - name: fluentd
        image: {{ .Values.image.LOGZIO }}
        env:
        - name:  LOGZIO_TOKEN
          valueFrom:
            secretKeyRef:
              name: logzio-token-secret
              key: logzio-token
        - name:  LOGZIO_URL
          valueFrom:
            secretKeyRef:
              name: logzio-token-secret
              key: logzio-url
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: POD_UNIQUE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: CONTAINER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['container_name']
        - name: ENVIRONMENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['environment']
        - name: APP_TIER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tier']
        resources:
          limits:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
          requests:
            cpu: {{ .Values.logzio.cpu }}m
            memory: {{ .Values.logzio.memory }}Mi
        volumeMounts:
        - name: tomcat-fluentd-config-volume
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: tomcat-data-volume
          mountPath: /usr/local/tomcat/logs
          subPath: logs
        - name: tomcat-data-volume
          mountPath: /opt/metricstream/SYSTEMi/Systemi/log
          subPath: SYSTEMi/Systemi/log
      initContainers:
      - name: oracle-container-live-check
        image: {{required "Image Info is mandatory! Read the Project Documentation to understand what and where to configure." .Values.image.LIVE_CHECK }}
        env:
          - name: K8S_URL
            value: {{ .Values.kube.url }}
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
          - name: DEPLOYMENT_NAME
            value: oracle-deployment
          - name: CONTAINER_NAME
            value: oracle-container
          - name: TIMEOUT
            value: "2400"
          - name: SLEEP_TIME
            value: "20"
      imagePullSecrets:
      - name: container-registry-key-secret
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        fsGroup: 1000
      allowedCapabilities: null
